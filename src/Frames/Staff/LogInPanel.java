/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Frames.Staff;

import DatabaseConenctor.MedicalStaff;
import Frames.*;
import DatabaseConenctor.StaffAccount;
import DatabaseConenctor.Student;
import java.awt.Color;
import java.time.LocalDate;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.NoResultException;
import javax.persistence.NonUniqueResultException;
import javax.persistence.PersistenceContext;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.persistence.TypedQuery;

/**
 *
 * @author netha
 */
public class LogInPanel extends javax.swing.JPanel {

    @PersistenceContext
    private EntityManager entityManager;
    @PersistenceContext
    private EntityManagerFactory entityManagerFactory;
    
    private boolean isUsernameEmpty;
    private boolean isPasswordEmpty;
    private boolean authenticated;
    private MedicalStaff result;
    private StaffMainFrame parentFrame;
    
    public LogInPanel(StaffMainFrame parentFrame) {
        this.parentFrame = parentFrame;
        this.entityManagerFactory = this.parentFrame.getEntityManagerFactory();
        this.entityManager = this.parentFrame.getEntityManager();
        this.isUsernameEmpty = true;
        this.isPasswordEmpty = true;
        this.authenticated = false;
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        usernameTF = new javax.swing.JTextField();
        userType = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        logInBTN = new javax.swing.JButton();
        passwordTF = new javax.swing.JPasswordField();

        setLayout(null);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Username");
        add(jLabel1);
        jLabel1.setBounds(0, 290, 1010, 20);

        jLabel2.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Welcome");
        add(jLabel2);
        jLabel2.setBounds(0, 130, 1010, 80);

        usernameTF.setForeground(new java.awt.Color(51, 51, 51));
        usernameTF.setText("Username");
        usernameTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                usernameTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                usernameTFFocusLost(evt);
            }
        });
        add(usernameTF);
        usernameTF.setBounds(390, 310, 230, 30);

        userType.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        userType.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        userType.setText("Staff");
        add(userType);
        userType.setBounds(0, 190, 1010, 80);

        jLabel4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Password");
        add(jLabel4);
        jLabel4.setBounds(0, 350, 1010, 20);

        logInBTN.setText("Log In");
        logInBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logInBTNActionPerformed(evt);
            }
        });
        add(logInBTN);
        logInBTN.setBounds(470, 410, 75, 30);

        passwordTF.setForeground(new java.awt.Color(51, 51, 51));
        passwordTF.setText("Password");
        passwordTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                passwordTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                passwordTFFocusLost(evt);
            }
        });
        add(passwordTF);
        passwordTF.setBounds(390, 370, 230, 30);

        getAccessibleContext().setAccessibleParent(this);
    }// </editor-fold>//GEN-END:initComponents

    private void logInBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logInBTNActionPerformed
        try {
            String username = this.usernameTF.getText();
            String password = new String(this.passwordTF.getPassword());
            TypedQuery<MedicalStaff> getMedicalStaffQuery = this.entityManager.createQuery(
                "SELECT m FROM StaffAccount a, MedicalStaff m " +
                "WHERE m.staffID = a.staffID.staffID AND (a.username = :username AND a.password = :password)",
                MedicalStaff.class
            );

            getMedicalStaffQuery.setParameter("username", username);
            getMedicalStaffQuery.setParameter("password", password);

            this.result = getMedicalStaffQuery.getSingleResult();
            this.parentFrame.setMedicalStaff(result);
            
            TypedQuery<StaffAccount> getStaffAccountQuery = this.entityManager.createNamedQuery("StaffAccount.findByStaffID", StaffAccount.class);
            StaffAccount account = getStaffAccountQuery.setParameter("staffID", this.result.getStaffID()).getSingleResult();
            
            this.authenticated = true;
            this.entityManager.getTransaction().begin();
            account.setIsActive((short) 1);
            
            this.entityManager.getTransaction().commit();            
            
            this.parentFrame.switchPanel(this, new MainPanel(this.parentFrame));
        } catch (NoResultException e) {
            this.authenticated = false;
            System.out.println("Invalid username or password.");
        } catch (NonUniqueResultException e) {
            this.authenticated = false;
            System.out.println("Multiple users found with same credentials. Please contact admin.");
        } catch (Exception e) {
            this.authenticated = false;
            System.err.println("An unexpected error occurred: " + e.getMessage());
            e.printStackTrace();
        }        
    }//GEN-LAST:event_logInBTNActionPerformed

    private void usernameTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usernameTFFocusGained
        // TODO add your handling code here:
        if (this.isUsernameEmpty) {
            this.usernameTF.setText("");
            this.usernameTF.setForeground(Color.BLACK);
            this.isUsernameEmpty = false;
        }
    }//GEN-LAST:event_usernameTFFocusGained

    private void usernameTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usernameTFFocusLost
        // TODO add your handling code here:
        if (this.usernameTF.getText().isEmpty()) {
            this.usernameTF.setText("Username");
            this.usernameTF.setForeground(Color.GRAY);
            this.isUsernameEmpty = true;
        }
    }//GEN-LAST:event_usernameTFFocusLost

    private void passwordTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordTFFocusGained
        // TODO add your handling code here:
        if (this.isPasswordEmpty) {
            this.passwordTF.setText("");
            this.passwordTF.setForeground(Color.BLACK);
            this.isPasswordEmpty = false;
        }
    }//GEN-LAST:event_passwordTFFocusGained

    private void passwordTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordTFFocusLost
        // TODO add your handling code here:
        if (this.passwordTF.getPassword().length == 0) {
            this.passwordTF.setText("Password");
            this.usernameTF.setForeground(Color.GRAY);
            this.isPasswordEmpty = true;
        }
    }//GEN-LAST:event_passwordTFFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton logInBTN;
    private javax.swing.JPasswordField passwordTF;
    private javax.swing.JLabel userType;
    private javax.swing.JTextField usernameTF;
    // End of variables declaration//GEN-END:variables
}
